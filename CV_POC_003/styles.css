h1, h2, h3, h4{
    margin: 0;
    padding: 10px;
}

.grid{
    display: grid;
    grid-template-columns: 100px 200px repeat(31, auto);
    grid-template-rows: repeat(60, 100px);
    row-gap: 2rem;   
}

.day{
    grid-column: 4;
    grid-row: 2;
    text-align: center;
    font-weight: bold;
}

/* I used ChatGPT to generate CSS styles 
(just for preview visualization)
to each attributed classes created in 'index.js' 
and place each element on its grid row.

But how can I attribute these classes dynamically?

Maybe using the .map method to generate an array of objects 
and attribute data to each Category, Activity and task 
that its created by the user.

I'm thinking that all of the following CSS information 
should be stored in a matrix created by the JS loop*/

/* Category Styles */
.c-0, .c-1, .c-2, .c-3 {
    color: red;
    grid-column: 1 / 3;
    padding-bottom: 120px;
    border-bottom: 1px solid black;
}
.c-0 {
    grid-row: 1;
}

.c-1 {
    grid-row: 16;
}

.c-2 {
    grid-row: 31;
}

.c-3 {
    grid-row: 46;
}

/* Activity Type Styles */

.a-0-0, .a-0-1, .a-1-0, .a-1-1, .a-2-0, .a-2-1, .a-3-0, .a-3-1 {
    color: blue;
    grid-column: 1 / 3;
    padding-bottom: 100px;
    border-bottom: 1px solid lightgray;
}
.a-0-0 {
    grid-row: 2;
}

.a-0-1 {
    grid-row: 9;
}

.a-1-0 {
    grid-row: 17;
}

.a-1-1 {
    grid-row: 24;
}

.a-2-0 {
    grid-row: 32;

}

.a-2-1 {
    grid-row: 39;

}
.a-3-0 {
    grid-row: 47;

}

.a-3-1 {
    grid-row: 54;
}

/* Task Styles */

/* Category 0 */

.tn-0-0-0 {
    color: green;
    grid-column: 2;
    grid-row: 3;
}

.td-0-0-0 {
    grid-column: 1;
    grid-row: 3;
}

.tn-0-0-1 {
    color: green;
    grid-column: 2;
    grid-row: 6;
}

.td-0-0-1 {
    grid-column: 1;
    grid-row: 6;
}

.tn-0-1-0 {
    color: green;
    grid-column: 2;
    grid-row: 10;
}

.td-0-1-0 {
    grid-column: 1;
    grid-row: 10;
}

.tn-0-1-1 {
    color: green;
    grid-column: 2;
    grid-row: 13;
}

.td-0-1-1 {
    grid-column: 1;
    grid-row: 13;
    overflow-x: scroll;
}

/* Category 1 */
.tn-1-0-0 {
    color: green;
    grid-column: 2;
    grid-row: 18;
}

.td-1-0-0 {
    grid-column: 1;
    grid-row: 18;
}

.tn-1-0-1 {
    color: green;
    grid-column: 2;
    grid-row: 21;
}

.td-1-0-1 {
    grid-column: 1;
    grid-row: 21;
}

.tn-1-1-0 {
    color: green;
    grid-column: 2;
    grid-row: 25;
}

.td-1-1-0 {
    grid-column: 1;
    grid-row: 25;
}

.tn-1-1-1 {
    color: green;
    grid-column: 2;
    grid-row: 28;
}

.td-1-1-1 {
    grid-column: 1;
    grid-row: 28;
}

/* Category 2 */
.tn-2-0-0 {
    color: green;
    grid-column: 2;
    grid-row: 33;
}

.td-2-0-0 {
    grid-column: 1;
    grid-row: 33;
}

.tn-2-0-1 {
    color: green;
    grid-column: 2;
    grid-row: 36;
}

.td-2-0-1 {
    grid-column: 1;
    grid-row: 36;
}

.tn-2-1-0 {
    color: green;
    grid-column: 2;
    grid-row: 40;
}

.td-2-1-0 {
    grid-column: 1;
    grid-row: 40;
}

.tn-2-1-1 {
    color: green;
    grid-column: 2;
    grid-row: 43;
}

.td-2-1-1 {
    grid-column: 1;
    grid-row: 43;
}

/* Category 3 */
.tn-3-0-0 {
    color: green;
    grid-column: 2;
    grid-row: 48;
}

.td-3-0-0 {
    grid-column: 1;
    grid-row: 48;
}

.tn-3-0-1 {
    color: green;
    grid-column: 2;
    grid-row: 51;
}

.td-3-0-1 {
    grid-column: 1;
    grid-row: 51;
    overflow-x: scroll;
}

.tn-3-1-0 {
    color: green;
    grid-column: 2;
    grid-row: 55;
}

.td-3-1-0 {
    grid-column: 1;
    grid-row: 55;
}

.tn-3-1-1 {
    color: green;
    grid-column: 2;
    grid-row: 58;
}

.td-3-1-1 {
    grid-column: 1;
    grid-row: 58;
}

/* Checkbox Styles */

/* Category 0 */
.cb-0-0-0 {
    grid-column: 4;
    grid-row: 3;
}

.cb-0-0-1 {
    grid-column: 4;
    grid-row: 6;
}

.cb-0-1-0 {
    grid-column: 4;
    grid-row: 10;
}

.cb-0-1-1 {
    grid-column: 4;
    grid-row: 13;
}

/* Category 1 */
.cb-1-0-0 {
    grid-column: 4;
    grid-row: 18;
}

.cb-1-0-1 {
    grid-column: 4;
    grid-row: 21;
}

.cb-1-1-0 {
    grid-column: 4;
    grid-row: 25;
}

.cb-1-1-1 {
    grid-column: 4;
    grid-row: 28;
}

/* Category 2 */
.cb-2-0-0 {
    grid-column: 4;
    grid-row: 33;
}

.cb-2-0-1 {
    grid-column: 4;
    grid-row: 36;
}

.cb-2-1-0 {
    grid-column: 4;
    grid-row: 40;
}

.cb-2-1-1 {
    grid-column: 4;
    grid-row: 43;
}

/* Category 3 */
.cb-3-0-0 {
    grid-column: 4;
    grid-row: 48;
}

.cb-3-0-1 {
    grid-column: 4;
    grid-row: 51;
}

.cb-3-1-0 {
    grid-column: 4;
    grid-row: 55;
}

.cb-3-1-1 {
    grid-column: 4;
    grid-row: 58;
}
